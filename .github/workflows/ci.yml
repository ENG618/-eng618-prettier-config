# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

  workflow_dispatch:

jobs:
  fossa-scan:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci') }}
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v4

      - name: "Run FOSSA Scan"
        uses: fossas/fossa-action@main # Use a specific version if locking is preferred
        with:
          api-key: ${{secrets.FOSSA_API_KEY}}

      - name: "Run FOSSA Test"
        uses: fossas/fossa-action@main # Use a specific version if locking is preferred
        with:
          api-key: ${{secrets.FOSSA_API_KEY}}
          run-tests: true

  build-and-release:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci') }}
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --immutable

      - name: Initialize Git user
        run: |
          git config --global user.name "Eric N. Garcia"
          git config --global user.email "eng618@garciaericn.com"

      - name: Initialize the NPM config
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ SECRETS.SSH_PRIVATE_KEY }}

      - name: Release It
        run: yarn release

    env:
      FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
